# continuous.est1.nonSL.ate <- c(mean(continuous.est1.nonSL_est_matrix_ate[,n.ind]),sd(continuous.est1.nonSL_est_matrix_ate[,n.ind]),mean(continuous.est1.nonSL_bias_matrix_ate[,n.ind]),continuous.est1.nonSL_ci_coverage_ATE[n.ind,2])
# continuous.est1.nonSL.Y1 <- c(mean(continuous.est1.nonSL_est_matrix_Y1[,n.ind]),sd(continuous.est1.nonSL_est_matrix_Y1[,n.ind]),mean(continuous.est1.nonSL_bias_matrix_Y1[,n.ind]),continuous.est1.nonSL_ci_coverage_Y1[n.ind,2])
# continuous.est1.nonSL.Y0 <- c(mean(continuous.est1.nonSL_est_matrix_Y0[,n.ind]),sd(continuous.est1.nonSL_est_matrix_Y0[,n.ind]),mean(continuous.est1.nonSL_bias_matrix_Y0[,n.ind]),continuous.est1.nonSL_ci_coverage_Y0[n.ind,2])
# continuous.est1.nonSL <- c(continuous.est1.nonSL.ate,continuous.est1.nonSL.Y1,continuous.est1.nonSL.Y0)
# continuous est2, nonSL
continuous.est2.nonSL.ate <- cbind(colMeans(continuous.est2.nonSL_est_matrix_ate[,n.ind]),apply(continuous.est2.nonSL_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.est2.nonSL_bias_matrix_ate[,n.ind]),continuous.est2.nonSL_ci_coverage_ATE[n.ind,2],colMeans((continuous.est2.nonSL_ci_matrix_ate_upper-continuous.est2.nonSL_ci_matrix_ate_lower)[,n.ind]))
# continuous.est2.nonSL.Y1 <- c(mean(continuous.est2.nonSL_est_matrix_Y1[,n.ind]),sd(continuous.est2.nonSL_est_matrix_Y1[,n.ind]),mean(continuous.est2.nonSL_bias_matrix_Y1[,n.ind]),continuous.est2.nonSL_ci_coverage_Y1[n.ind,2])
# continuous.est2.nonSL.Y0 <- c(mean(continuous.est2.nonSL_est_matrix_Y0[,n.ind]),sd(continuous.est2.nonSL_est_matrix_Y0[,n.ind]),mean(continuous.est2.nonSL_bias_matrix_Y0[,n.ind]),continuous.est2.nonSL_ci_coverage_Y0[n.ind,2])
# continuous.est2.nonSL <- c(continuous.est2.nonSL.ate,continuous.est2.nonSL.Y1,continuous.est2.nonSL.Y0)
# continuous est3, nonSL
continuous.est3.nonSL.ate <- cbind(colMeans(continuous.est3.nonSL_est_matrix_ate[,n.ind]),apply(continuous.est3.nonSL_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.est3.nonSL_bias_matrix_ate[,n.ind]),continuous.est3.nonSL_ci_coverage_ATE[n.ind,2],colMeans((continuous.est3.nonSL_ci_matrix_ate_upper-continuous.est3.nonSL_ci_matrix_ate_lower)[,n.ind]))
# continuous.est3.nonSL.Y1 <- c(mean(continuous.est3.nonSL_est_matrix_Y1[,n.ind]),sd(continuous.est3.nonSL_est_matrix_Y1[,n.ind]),mean(continuous.est3.nonSL_bias_matrix_Y1[,n.ind]),continuous.est3.nonSL_ci_coverage_Y1[n.ind,2])
# continuous.est3.nonSL.Y0 <- c(mean(continuous.est3.nonSL_est_matrix_Y0[,n.ind]),sd(continuous.est3.nonSL_est_matrix_Y0[,n.ind]),mean(continuous.est3.nonSL_bias_matrix_Y0[,n.ind]),continuous.est3.nonSL_ci_coverage_Y0[n.ind,2])
# continuous.est3.nonSL <- c(continuous.est3.nonSL.ate,continuous.est3.nonSL.Y1,continuous.est3.nonSL.Y0)
# continuous est2, SL
continuous.est2.SL.ate <- cbind(colMeans(continuous.est2.SL_est_matrix_ate[,n.ind]),apply(continuous.est2.SL_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.est2.SL_bias_matrix_ate[,n.ind]),continuous.est2.SL_ci_coverage_ATE[n.ind,2],colMeans((continuous.est2.SL_ci_matrix_ate_upper-continuous.est2.SL_ci_matrix_ate_lower)[,n.ind]))
# continuous.est2.SL.Y1 <- c(mean(continuous.est2.SL_est_matrix_Y1[,n.ind]),sd(continuous.est2.SL_est_matrix_Y1[,n.ind]),mean(continuous.est2.SL_bias_matrix_Y1[,n.ind]),continuous.est2.SL_ci_coverage_Y1[n.ind,2])
# continuous.est2.SL.Y0 <- c(mean(continuous.est2.SL_est_matrix_Y0[,n.ind]),sd(continuous.est2.SL_est_matrix_Y0[,n.ind]),mean(continuous.est2.SL_bias_matrix_Y0[,n.ind]),continuous.est2.SL_ci_coverage_Y0[n.ind,2])
# continuous.est2.SL <- c(continuous.est2.SL.ate,continuous.est2.SL.Y1,continuous.est2.SL.Y0)
# continuous est3, SL
continuous.est3.SL.ate <- cbind(colMeans(continuous.est3.SL_est_matrix_ate[,n.ind]),apply(continuous.est3.SL_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.est3.SL_bias_matrix_ate[,n.ind]),continuous.est3.SL_ci_coverage_ATE[n.ind,2],colMeans((continuous.est3.SL_ci_matrix_ate_upper-continuous.est3.SL_ci_matrix_ate_lower)[,n.ind]))
# continuous.est3.SL.Y1 <- c(mean(continuous.est3.SL_est_matrix_Y1[,n.ind]),sd(continuous.est3.SL_est_matrix_Y1[,n.ind]),mean(continuous.est3.SL_bias_matrix_Y1[,n.ind]),continuous.est3.SL_ci_coverage_Y1[n.ind,2])
# continuous.est3.SL.Y0 <- c(mean(continuous.est3.SL_est_matrix_Y0[,n.ind]),sd(continuous.est3.SL_est_matrix_Y0[,n.ind]),mean(continuous.est3.SL_bias_matrix_Y0[,n.ind]),continuous.est3.SL_ci_coverage_Y0[n.ind,2])
# continuous.est3.SL <- c(continuous.est3.SL.ate,continuous.est3.SL.Y1,continuous.est3.SL.Y0)
# binary onestep, nonSL
binary.onestep.nonSL.ate <- cbind(colMeans(binary.onestep.nonSL_est_matrix_ate[,n.ind]),apply(binary.onestep.nonSL_est_matrix_ate[,n.ind],2,sd),colMeans(binary.onestep.nonSL_bias_matrix_ate[,n.ind]),binary.onestep.nonSL_ci_coverage_ATE[n.ind,2],colMeans((binary.onestep.nonSL_ci_matrix_ate_upper-binary.onestep.nonSL_ci_matrix_ate_lower)[,n.ind]))
# binary.onestep.nonSL.Y1 <- c(mean(binary.onestep.nonSL_est_matrix_Y1[,n.ind]),sd(binary.onestep.nonSL_est_matrix_Y1[,n.ind]),mean(binary.onestep.nonSL_bias_matrix_Y1[,n.ind]),binary.onestep.nonSL_ci_coverage_Y1[n.ind,2])
# binary.onestep.nonSL.Y0 <- c(mean(binary.onestep.nonSL_est_matrix_Y0[,n.ind]),sd(binary.onestep.nonSL_est_matrix_Y0[,n.ind]),mean(binary.onestep.nonSL_bias_matrix_Y0[,n.ind]),binary.onestep.nonSL_ci_coverage_Y0[n.ind,2])
# binary.onestep.nonSL <- c(binary.onestep.nonSL.ate,binary.onestep.nonSL.Y1,binary.onestep.nonSL.Y0)
# binary onestep, SL
binary.onestep.SL.ate <- cbind(colMeans(binary.onestep.SL_est_matrix_ate[,n.ind]),apply(binary.onestep.SL_est_matrix_ate[,n.ind],2,sd),colMeans(binary.onestep.SL_bias_matrix_ate[,n.ind]),binary.onestep.SL_ci_coverage_ATE[n.ind,2],colMeans((binary.onestep.SL_ci_matrix_ate_upper-binary.onestep.SL_ci_matrix_ate_lower)[,n.ind]))
# binary.onestep.SL.Y1 <- c(mean(binary.onestep.SL_est_matrix_Y1[,n.ind]),sd(binary.onestep.SL_est_matrix_Y1[,n.ind]),mean(binary.onestep.SL_bias_matrix_Y1[,n.ind]),binary.onestep.SL_ci_coverage_Y1[n.ind,2])
# binary.onestep.SL.Y0 <- c(mean(binary.onestep.SL_est_matrix_Y0[,n.ind]),sd(binary.onestep.SL_est_matrix_Y0[,n.ind]),mean(binary.onestep.SL_bias_matrix_Y0[,n.ind]),binary.onestep.SL_ci_coverage_Y0[n.ind,2])
# binary.onestep.SL <- c(binary.onestep.SL.ate,binary.onestep.SL.Y1,binary.onestep.SL.Y0)
# continuous onestep, nonSL-densratio
continuous.onestep.nonSL.den.ate <- cbind(colMeans(continuous.onestep.nonSL.den_est_matrix_ate[,n.ind]),apply(continuous.onestep.nonSL.den_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.onestep.nonSL.den_bias_matrix_ate[,n.ind]),continuous.onestep.nonSL.den_ci_coverage_ATE[n.ind,2],colMeans((continuous.onestep.nonSL.den_ci_matrix_ate_upper-continuous.onestep.nonSL.den_ci_matrix_ate_lower)[,n.ind]))
# continuous.onestep.nonSL.den.Y1 <- c(mean(continuous.onestep.nonSL.den_est_matrix_Y1[,n.ind]),sd(continuous.onestep.nonSL.den_est_matrix_Y1[,n.ind]),mean(continuous.onestep.nonSL.den_bias_matrix_Y1[,n.ind]),continuous.onestep.nonSL.den_ci_coverage_Y1[n.ind,2])
# continuous.onestep.nonSL.den.Y0 <- c(mean(continuous.onestep.nonSL.den_est_matrix_Y0[,n.ind]),sd(continuous.onestep.nonSL.den_est_matrix_Y0[,n.ind]),mean(continuous.onestep.nonSL.den_bias_matrix_Y0[,n.ind]),continuous.onestep.nonSL.den_ci_coverage_Y0[n.ind,2])
# continuous.onestep.nonSL.den <- c(continuous.onestep.nonSL.den.ate,continuous.onestep.nonSL.den.Y1,continuous.onestep.nonSL.den.Y0)
# continuous onestep, nonSL-bayes
continuous.onestep.nonSL.bayes.ate <- cbind(colMeans(continuous.onestep.nonSL.bayes_est_matrix_ate[,n.ind]),apply(continuous.onestep.nonSL.bayes_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.onestep.nonSL.bayes_bias_matrix_ate[,n.ind]),continuous.onestep.nonSL.bayes_ci_coverage_ATE[n.ind,2],colMeans((continuous.onestep.nonSL.bayes_ci_matrix_ate_upper-continuous.onestep.nonSL.bayes_ci_matrix_ate_lower)[,n.ind]))
# continuous.onestep.nonSL.bayes.Y1 <- c(mean(continuous.onestep.nonSL.bayes_est_matrix_Y1[,n.ind]),sd(continuous.onestep.nonSL.bayes_est_matrix_Y1[,n.ind]),mean(continuous.onestep.nonSL.bayes_bias_matrix_Y1[,n.ind]),continuous.onestep.nonSL.bayes_ci_coverage_Y1[n.ind,2])
# continuous.onestep.nonSL.bayes.Y0 <- c(mean(continuous.onestep.nonSL.bayes_est_matrix_Y0[,n.ind]),sd(continuous.onestep.nonSL.bayes_est_matrix_Y0[,n.ind]),mean(continuous.onestep.nonSL.bayes_bias_matrix_Y0[,n.ind]),continuous.onestep.nonSL.bayes_ci_coverage_Y0[n.ind,2])
# continuous.onestep.nonSL.bayes <- c(continuous.onestep.nonSL.bayes.ate,continuous.onestep.nonSL.bayes.Y1,continuous.onestep.nonSL.bayes.Y0)
# continuous onestep, SL-densratio
continuous.onestep.SL.den.ate <- cbind(colMeans(continuous.onestep.SL.den_est_matrix_ate[,n.ind]),apply(continuous.onestep.SL.den_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.onestep.SL.den_bias_matrix_ate[,n.ind]),continuous.onestep.SL.den_ci_coverage_ATE[n.ind,2],colMeans((continuous.onestep.SL.den_ci_matrix_ate_upper-continuous.onestep.SL.den_ci_matrix_ate_lower)[,n.ind]))
# continuous.onestep.SL.den.Y1 <- c(mean(continuous.onestep.SL.den_est_matrix_Y1[,n.ind]),sd(continuous.onestep.SL.den_est_matrix_Y1[,n.ind]),mean(continuous.onestep.SL.den_bias_matrix_Y1[,n.ind]),continuous.onestep.SL.den_ci_coverage_Y1[n.ind,2])
# continuous.onestep.SL.den.Y0 <- c(mean(continuous.onestep.SL.den_est_matrix_Y0[,n.ind]),sd(continuous.onestep.SL.den_est_matrix_Y0[,n.ind]),mean(continuous.onestep.SL.den_bias_matrix_Y0[,n.ind]),continuous.onestep.SL.den_ci_coverage_Y0[n.ind,2])
# continuous.onestep.SL.den <- c(continuous.onestep.SL.den.ate,continuous.onestep.SL.den.Y1,continuous.onestep.SL.den.Y0)
# continuous onestep, SL-bayes
continuous.onestep.SL.bayes.ate <- cbind(colMeans(continuous.onestep.SL.bayes_est_matrix_ate[,n.ind]),apply(continuous.onestep.SL.bayes_est_matrix_ate[,n.ind],2,sd),colMeans(continuous.onestep.SL.bayes_bias_matrix_ate[,n.ind]),continuous.onestep.SL.bayes_ci_coverage_ATE[n.ind,2],colMeans((continuous.onestep.SL.bayes_ci_matrix_ate_upper-continuous.onestep.SL.bayes_ci_matrix_ate_lower)[,n.ind]))
# continuous.onestep.SL.bayes.Y1 <- c(mean(continuous.onestep.SL.bayes_est_matrix_Y1[,n.ind]),sd(continuous.onestep.SL.bayes_est_matrix_Y1[,n.ind]),mean(continuous.onestep.SL.bayes_bias_matrix_Y1[,n.ind]),continuous.onestep.SL.bayes_ci_coverage_Y1[n.ind,2])
# continuous.onestep.SL.bayes.Y0 <- c(mean(continuous.onestep.SL.bayes_est_matrix_Y0[,n.ind]),sd(continuous.onestep.SL.bayes_est_matrix_Y0[,n.ind]),mean(continuous.onestep.SL.bayes_bias_matrix_Y0[,n.ind]),continuous.onestep.SL.bayes_ci_coverage_Y0[n.ind,2])
# continuous.onestep.SL.bayes <- c(continuous.onestep.SL.bayes.ate,continuous.onestep.SL.bayes.Y1,continuous.onestep.SL.bayes.Y0)
dat <- list(binary.est1.nonSL.ate,binary.est1.SL.ate,continuous.est2.nonSL.ate,continuous.est2.SL.ate,continuous.est3.nonSL.ate,continuous.est3.SL.ate,binary.onestep.nonSL.ate,binary.onestep.SL.ate,continuous.onestep.nonSL.den.ate,continuous.onestep.SL.den.ate,continuous.onestep.nonSL.bayes.ate,continuous.onestep.SL.bayes.ate)
for (i in seq_along(n)) {
# Extract the column from each data frame and cbind
columns <- lapply(dat,function(x) x[i,])  # Extract the first column from each data frame
assign(paste0("dt",i),round(do.call(cbind, columns),decimal))   # Combine the columns using cbind
df <- get(paste0("dt",i))  # Get the data frame by name
df[4, ] <- paste0(df[4, ] * 100, "%")  # Modify the value in the data frame
assign(paste0("dt",i), df)  # Update the data frame with the modified value
}
dat <- rbind(dt1,dt2,dt3)
# make table
library(huxtable)
library(dplyr)
options(scipen = 999)
table1 <- as_hux(dat) %>%
insert_row("TMLE estimators","","","","","","One-step EIF estimator","","","","","", after = 0) %>%
merge_cells(1, 1:6) %>%
merge_cells(1, 7:12) %>%
insert_row("Univariate Binary","","Univariate Continuous","","","","Univariate Binary","","Univariate Continuous","","","", after = 1) %>%
merge_cells(2, 1:2) %>%
merge_cells(2, 3:6) %>%
merge_cells(2, 7:8) %>%
merge_cells(2, 9:12) %>%
insert_row("\\(\\psi^1(\\hat{Q}^*)\\)","","\\(\\psi^2(\\hat{Q}^*)\\)","","\\(\\psi^3(\\hat{Q}^*)\\)","","\\(\\psi^1_{+}(\\hat{Q})\\)","","\\(\\psi^2_{+}(\\hat{Q})\\)","","\\(\\psi^3_{+}(\\hat{Q})\\)","", after = 2) %>%
insert_row("non-SL","SL","non-SL","SL","non-SL","SL","non-SL","SL","non-SL","SL","non-SL","SL", after = 3) %>%
merge_cells(3, 1:2) %>%
merge_cells(3, 3:4) %>%
merge_cells(3, 5:6) %>%
merge_cells(3, 7:8) %>%
merge_cells(3, 9:10) %>%
merge_cells(3, 11:12) %>%
insert_row("","","","","","","","","","","","", after = 4) %>%
insert_row("","","","","","","","","","","","", after = 10) %>%
insert_row("","","","","","","","","","","","", after = 16) %>%
insert_column(c("","Mediators","Estimators","SuperLearner","Sample size=500","ATE estimate","Standard deviation","Bias","95% CI coverage","Avg CI width","Sample size=1000","ATE estimate","Standard deviation","Bias","95% CI coverage","Avg CI width","Sample size=2000","ATE estimate","Standard deviation","Bias","95% CI coverage","Avg CI width"), after = 0) %>%
set_escape_contents(3, 1:ncol(.), FALSE) %>%
set_align(col=1, everywhere, "left") %>%
set_align(col=2:ncol(.),everywhere,"center") %>%
set_tb_padding(1, everywhere, 0) %>%
set_bold(1, everywhere) %>%
set_bold(c(5,11,17), everywhere) %>%
set_italic(2,everywhere) %>%
set_bottom_border(row = 1, col =2:ncol(.)) %>%
set_bottom_border(row = 4, col =2:ncol(.)) %>%
set_bottom_border(row = 2, col =2:ncol(.)) %>%
set_right_border(5:nrow(.), 3, brdr(0.4,"dashed")) %>%
set_right_border(5:nrow(.), 7, brdr(0.4,"dashed")) %>%
set_right_border(5:nrow(.), 9, brdr(0.4,"dashed")) %>%
insert_row(paste0("Note: Number of simulations=1000. \\(\\psi^{1,2}(\\hat{Q}^*)\\) refer to TMLE estimators and \\(\\psi^{1,2}_{+}(\\hat{Q})\\) refer to the corresponding Onestep estimators."),"","","","","","","","","","","","", after = nrow(.)) %>%
merge_cells(nrow(.),1:ncol(.)) %>%
set_top_border(row=1,col=everywhere,brdr(1, "solid")) %>% set_bottom_border(row = nrow(.)-1,col = everywhere,brdr(1, "solid")) %>%
set_font_size(5.5) %>% set_escape_contents(nrow(.), 1:ncol(.), FALSE) %>% set_caption("Comparison between TMLE estimators and one-step EIF estimator under complex DGP with binary and continuous mediators.") %>%set_all_padding(1)
table1
setwd("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/code/sim-2")
quick_latex(table1)
## treatment: 6th year grade ====
library(TmleFrontdoor)
library(mice)
library(gtsummary)
# Load data
load("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/code/real data/data.Rdata")
## Table==
summary <- function(data, dec=2){
value <- vector(mode="character",ncol(data))
for (i in 1:ncol(data)){
if (all(class(data[,i]) %in% c("numeric","integer"))){
value[i] <- paste0(round(mean(data[,i]),dec)," (", round(sd(data[,i]),dec),")")
}else if (all(class(data[,i]) %in% c("factor","ordered"))){
value[i] <- paste(paste0(names(table(data[,i])),
" (",
paste0(round(as.vector(table(data[,i]))/nrow(data)*100,dec),"%"),
")"),collapse=",\n")
}
}
return(value)
}
dat <- cbind(c("\\(A\\)","\\(M_1\\)","\\(M_2\\)","\\(M_3\\)","\\(M_4\\)","\\(M_5\\)","\\(M_6\\)","\\(M_7\\)","\\(M_8\\)","\\(X_1\\)","\\(X_2\\)","\\(X_3\\)","\\(X_4\\)","Y"),
c("1984",rep("1991",8),"1972, 1983-1984","1971-1972","1971-1991","1991","2002"),
c("Whether the grade average of all subjects in 6th grade is above median",
#"Whether the grade average of the matriculation examination above or below the median",
"Whether obtain an undergraduate degree",
"The highest educational field (categorised in accordance with Statistics Finland's Classification of Education 1988)",
"The age when began the highest attained educational qualification",
"Length of formal education in months after comprehensive/upper secondary school (including education in progress)",
"Number of different fields of education (including education in progress)",
"Do you have the educational qualification required for your current job?",
"Total length of the spells of unemployment greater than one year",
"Age when started working",
"Socio-economic status of the family defined as the total family taxable income in year 1972 and year 1983-1984",
"ITPA score",
"Gender",
"The respondent's age in 1991",
"The respondent's earned income in euros in 2000"),
summary(dt1[,c("A","highest_edu","edu_field","age_start_highedu","len_of_edu","num_field","qual_job","len_unemp","age_work","family.income","totalITPA_10","sex","age1991","income2000")]))
## Table==
summary <- function(data, dec=2){
value <- vector(mode="character",ncol(data))
for (i in 1:ncol(data)){
if (all(class(data[,i]) %in% c("numeric","integer"))){
value[i] <- paste0(round(mean(data[,i]),dec)," (", round(sd(data[,i]),dec),")")
}else if (all(class(data[,i]) %in% c("factor","ordered"))){
value[i] <- paste(paste0(names(table(data[,i])),
" (",
paste0(round(as.vector(table(data[,i]))/nrow(data)*100,dec),"%"),
")"),collapse=",\n")
}
}
return(value)
}
dat <- cbind(c("\\(A\\)","\\(M_1\\)","\\(M_2\\)","\\(M_3\\)","\\(M_4\\)","\\(M_5\\)","\\(M_6\\)","\\(M_7\\)","\\(M_8\\)","\\(X_1\\)","\\(X_2\\)","\\(X_3\\)","\\(X_4\\)","Y"),
c("1984",rep("1991",8),"1972, 1983-1984","1971-1972","1971-1991","1991","2002"),
c("Whether the grade average of all subjects in 6th grade is above median",
#"Whether the grade average of the matriculation examination above or below the median",
"Whether obtain an undergraduate degree",
"The highest educational field (categorised in accordance with Statistics Finland's Classification of Education 1988)",
"The age when began the highest attained educational qualification",
"Length of formal education in months after comprehensive/upper secondary school (including education in progress)",
"Number of different fields of education (including education in progress)",
"Do you have the educational qualification required for your current job?",
"Total length of the spells of unemployment greater than one year",
"Age when started working",
"Socio-economic status of the family defined as the total family taxable income in year 1972 and year 1983-1984",
"ITPA score",
"Gender",
"The respondent's age in 1991",
"The respondent's earned income in euros in 2000"),
summary(dt1[,c("A","highest_edu","edu_field","age_start_highedu","len_of_edu","num_field","qual_job","len_unemp","age_work","family.income","totalITPA_10","sex","age1991","income2000")]))
names(dt1)
c("A","highest_edu","edu_field","age_start_highedu","len_of_edu","num_field","qual_job","len_unemp","age_work","family.income","totalITPA_10","sex","age1991","income2000") %in% names(dt1)
# Load data
load("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/code/real data/data.Rdata")
names(dt1)
# Estimation
# I replaced familySES with family.income cause familySES is measured around 1971-1991, therefore, this variable may be collected after the treatment
set.seed(7)
dt1 <- mice(dt1, m=1)
dt1 <- complete(dt1,1) %>% mutate(A=ifelse(grade_6yr>median(grade_6yr),1,0), highest_edu=factor(ifelse(highest_edu<6,0,1), levels=0:1,label=c("No","Yes")),
len_unemp=factor(ifelse(len_unemp<=2,0,1),levels=0:1,label=c("No","Yes")))
## Table==
summary <- function(data, dec=2){
value <- vector(mode="character",ncol(data))
for (i in 1:ncol(data)){
if (all(class(data[,i]) %in% c("numeric","integer"))){
value[i] <- paste0(round(mean(data[,i]),dec)," (", round(sd(data[,i]),dec),")")
}else if (all(class(data[,i]) %in% c("factor","ordered"))){
value[i] <- paste(paste0(names(table(data[,i])),
" (",
paste0(round(as.vector(table(data[,i]))/nrow(data)*100,dec),"%"),
")"),collapse=",\n")
}
}
return(value)
}
dat <- cbind(c("\\(A\\)","\\(M_1\\)","\\(M_2\\)","\\(M_3\\)","\\(M_4\\)","\\(M_5\\)","\\(M_6\\)","\\(M_7\\)","\\(M_8\\)","\\(X_1\\)","\\(X_2\\)","\\(X_3\\)","\\(X_4\\)","Y"),
c("1984",rep("1991",8),"1972, 1983-1984","1971-1972","1971-1991","1991","2002"),
c("Whether the grade average of all subjects in 6th grade is above median",
#"Whether the grade average of the matriculation examination above or below the median",
"Whether obtain an undergraduate degree",
"The highest educational field (categorised in accordance with Statistics Finland's Classification of Education 1988)",
"The age when began the highest attained educational qualification",
"Length of formal education in months after comprehensive/upper secondary school (including education in progress)",
"Number of different fields of education (including education in progress)",
"Do you have the educational qualification required for your current job?",
"Total length of the spells of unemployment greater than one year",
"Age when started working",
"Socio-economic status of the family defined as the total family taxable income in year 1972 and year 1983-1984",
"ITPA score",
"Gender",
"The respondent's age in 1991",
"The respondent's earned income in euros in 2000"),
summary(dt1[,c("A","highest_edu","edu_field","age_start_highedu","len_of_edu","num_field","qual_job","len_unemp","age_work","family.income","totalITPA_10","sex","age1991","income2000")]))
# make table
library(huxtable)
library(dplyr)
options(scipen = 999)
table1 <- as_hux(dat) %>%
insert_row("Treatments","","","", after = 0) %>%
merge_cells(1, 1:3) %>%
insert_row("Mediators","","","", after = 2) %>%
merge_cells(3, 1:3) %>%
insert_row("Measured confounders","","","", after = 11) %>%
merge_cells(12, 1:3) %>%
insert_row("Outcome","","","", after = 16) %>%
merge_cells(17, 1:3) %>%
insert_row("Variables","Collection Year","Description","Summary Statistics", after = 0) %>%
insert_row(paste0("Note: Sample size=634. The summary statistic is mean (standard deviation) for continuous variables and category (category frequency) for categorical variables after imputation."),"","","", after = nrow(.)) %>%
insert_column(rep("",nrow(.)),after=3) %>%
merge_cells(nrow(.),1:ncol(.)) %>%
set_escape_contents(1:nrow(.), 1, FALSE) %>%
set_align(col=c(1,3), everywhere, "left") %>%
set_align(col=c(2),everywhere,"center") %>%
set_valign(2:nrow(.), 1:4, "middle" ) %>%
set_tb_padding(1, everywhere, 0) %>%
set_bold(1, everywhere) %>%
set_italic(c(2,4,13,18),everywhere) %>%
set_bottom_border(row = 1, col =1:ncol(.)) %>%
set_top_border(row=1,col=everywhere,brdr(1, "solid")) %>% set_bottom_border(row = nrow(.)-1,col = everywhere,brdr(1, "solid")) %>%
set_caption("Description of variables used for real data analysis: a collection from the Finnish Social Science Data Archive") %>%
set_all_padding(1) %>% set_font_size(6)  %>% set_width(value=1) %>% set_col_width(c(0.1,0.15,0.505,0.05,0.24)) %>% set_wrap(T)
table1
## Table==
summary <- function(data, dec=2){
value <- vector(mode="character",ncol(data))
for (i in 1:ncol(data)){
if (all(class(data[,i]) %in% c("numeric","integer"))){
value[i] <- paste0(round(mean(data[,i]),dec)," (", round(sd(data[,i]),dec),")")
}else if (all(class(data[,i]) %in% c("factor","ordered"))){
value[i] <- paste(paste0(names(table(data[,i])),
" (",
paste0(round(as.vector(table(data[,i]))/nrow(data)*100,dec),"%"),
")"),collapse=",\n")
}
}
return(value)
}
dat <- cbind(c("\\(A\\)","\\(M_1\\)","\\(M_2\\)","\\(M_3\\)","\\(M_4\\)","\\(M_5\\)","\\(M_6\\)","\\(M_7\\)","\\(M_8\\)","\\(X_1\\)","\\(X_2\\)","\\(X_3\\)","\\(X_4\\)","Y"),
c("1984",rep("1991",8),"1972, 1983-1984","1971-1972","1971-1991","1991","2002"),
c("Whether the grade average of all subjects in 6th grade is above median",
#"Whether the grade average of the matriculation examination above or below the median",
"Whether obtain an undergraduate degree",
"The highest educational field (categorised in accordance with Statistics Finland's Classification of Education 1988)",
"The age when began the highest attained educational qualification",
"Length of formal education in months after comprehensive/upper secondary school (including education in progress)",
"Number of different fields of education (including education in progress)",
"Do you have the educational qualification required for your current job?",
"Total length of the spells of unemployment greater than one year",
"Age when started working",
"Socio-economic status of the family defined as the total family taxable income in year 1972 and year 1983-1984",
"ITPA score",
"Gender",
"The respondent's age in 1991",
"The respondent's earned income in euros in 2000"),
summary(dt1[,c("A","highest_edu","edu_field","age_start_highedu","len_of_edu","num_field","qual_job","len_unemp","age_work","family.income","totalITPA_10","sex","age1991","income2000")]))
# make table
library(huxtable)
library(dplyr)
options(scipen = 999)
table1 <- as_hux(dat) %>%
insert_row("Treatments","","","", after = 0) %>%
merge_cells(1, 1:3) %>%
insert_row("Mediators","","","", after = 2) %>%
merge_cells(3, 1:3) %>%
insert_row("Measured confounders","","","", after = 11) %>%
merge_cells(12, 1:3) %>%
insert_row("Outcome","","","", after = 16) %>%
merge_cells(17, 1:3) %>%
insert_row("Variables","Collection Year","Description","Summary Statistics", after = 0) %>%
insert_row(paste0("Note: Sample size=634. The summary statistic is mean (standard deviation) for continuous variables and category (category frequency) for categorical variables after imputation."),"","","", after = nrow(.)) %>%
insert_column(rep("",nrow(.)),after=3) %>%
merge_cells(nrow(.),1:ncol(.)) %>%
set_escape_contents(1:nrow(.), 1, FALSE) %>%
set_align(col=c(1,3), everywhere, "left") %>%
set_align(col=c(2),everywhere,"center") %>%
set_valign(2:nrow(.), 1:4, "middle" ) %>%
set_tb_padding(1, everywhere, 0) %>%
set_bold(1, everywhere) %>%
set_italic(c(2,4,13,18),everywhere) %>%
set_bottom_border(row = 1, col =1:ncol(.)) %>%
set_top_border(row=1,col=everywhere,brdr(1, "solid")) %>% set_bottom_border(row = nrow(.)-1,col = everywhere,brdr(1, "solid")) %>%
set_caption("Description of variables used for real data analysis: a collection from the Finnish Social Science Data Archive") %>%
set_all_padding(1) %>% set_font_size(6)  %>% set_width(value=1) %>% set_col_width(c(0.1,0.15,0.505,0.05,0.24)) %>% set_wrap(T)
table1
dt1 <- dt1  %>% mutate(A=factor(A,levels=0:1,label=c("No","Yes")))
dat <- cbind(c("\\(A\\)","\\(M_1\\)","\\(M_2\\)","\\(M_3\\)","\\(M_4\\)","\\(M_5\\)","\\(M_6\\)","\\(M_7\\)","\\(M_8\\)","\\(X_1\\)","\\(X_2\\)","\\(X_3\\)","\\(X_4\\)","Y"),
c("1984",rep("1991",8),"1972, 1983-1984","1971-1972","1971-1991","1991","2002"),
c("Whether the grade average of all subjects in 6th grade is above median",
#"Whether the grade average of the matriculation examination above or below the median",
"Whether obtain an undergraduate degree",
"The highest educational field (categorised in accordance with Statistics Finland's Classification of Education 1988)",
"The age when began the highest attained educational qualification",
"Length of formal education in months after comprehensive/upper secondary school (including education in progress)",
"Number of different fields of education (including education in progress)",
"Do you have the educational qualification required for your current job?",
"Total length of the spells of unemployment greater than one year",
"Age when started working",
"Socio-economic status of the family defined as the total family taxable income in year 1972 and year 1983-1984",
"ITPA score",
"Gender",
"The respondent's age in 1991",
"The respondent's earned income in euros in 2000"),
summary(dt1[,c("A","highest_edu","edu_field","age_start_highedu","len_of_edu","num_field","qual_job","len_unemp","age_work","family.income","totalITPA_10","sex","age1991","income2000")]))
# make table
library(huxtable)
library(dplyr)
options(scipen = 999)
table1 <- as_hux(dat) %>%
insert_row("Treatments","","","", after = 0) %>%
merge_cells(1, 1:3) %>%
insert_row("Mediators","","","", after = 2) %>%
merge_cells(3, 1:3) %>%
insert_row("Measured confounders","","","", after = 11) %>%
merge_cells(12, 1:3) %>%
insert_row("Outcome","","","", after = 16) %>%
merge_cells(17, 1:3) %>%
insert_row("Variables","Collection Year","Description","Summary Statistics", after = 0) %>%
insert_row(paste0("Note: Sample size=634. The summary statistic is mean (standard deviation) for continuous variables and category (category frequency) for categorical variables after imputation."),"","","", after = nrow(.)) %>%
insert_column(rep("",nrow(.)),after=3) %>%
merge_cells(nrow(.),1:ncol(.)) %>%
set_escape_contents(1:nrow(.), 1, FALSE) %>%
set_align(col=c(1,3), everywhere, "left") %>%
set_align(col=c(2),everywhere,"center") %>%
set_valign(2:nrow(.), 1:4, "middle" ) %>%
set_tb_padding(1, everywhere, 0) %>%
set_bold(1, everywhere) %>%
set_italic(c(2,4,13,18),everywhere) %>%
set_bottom_border(row = 1, col =1:ncol(.)) %>%
set_top_border(row=1,col=everywhere,brdr(1, "solid")) %>% set_bottom_border(row = nrow(.)-1,col = everywhere,brdr(1, "solid")) %>%
set_caption("Description of variables used for real data analysis: a collection from the Finnish Social Science Data Archive") %>%
set_all_padding(1) %>% set_font_size(6)  %>% set_width(value=1) %>% set_col_width(c(0.1,0.15,0.505,0.05,0.24)) %>% set_wrap(T)
table1
setwd("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/code/real data/")
quick_latex(table1)
## simulation 2
library(SuperLearner)
library(dplyr)
load("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/code/2-continuous.Rdata")
attach(data, warn.conflicts=FALSE)
dat_MAX <- data.frame(M,A=A,X)
set.seed(7)
# truth
parY = c(1, 1, 1, -1); parU=c(1,1,1,-1)
truth <- parY[1]*(parU[1] + parU[2]*A + parU[3]*X + parU[4]*A*X) + parY[2]*M + parY[3]*X + parY[4]*M*X
# regression
lm_pred <- predict(lm(Y~.,data=dat_MAX))
# CF
lib = c("SL.glm", "SL.gam",
"SL.ranger",
"SL.svm","SL.mean")
or_fit <- CV.SuperLearner(Y=Y, X=dat_MAX, family = gaussian(), V = 5, SL.library = lib, control = list(saveFitLibrary=T),saveAll = T)
cv_pred <- or_fit$SL.predict
# SL
or_fit <- SuperLearner(Y=Y, X=dat_MAX, family = gaussian(),SL.library = lib)
sl_pred <- predict(or_fit)[[1]] %>% as.vector()
plot(cv_pred-truth); mean((cv_pred-truth)^2)
plot(sl_pred-truth); mean((sl_pred-truth)^2)
plot(lm_pred-truth); mean((lm_pred-truth)^2)
SL.ranger
?SL.ranger
## Clean data====
dat <- read.csv2("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/TMLE FrontDoor Experiments/Real Data Application/FSD2076/Study/Data/daF2076e.csv")
# subset useful variables
dat <- dat[,c("t3","bv4_1","ktu32","t10","t11","t12","t13","t14","l16","l17","k70","k71","k72","k73","k74","k75","k76","k77","koulu7_1","koulu1","koulu4","koulu7_2","koulu7_9","ktu19","ktu31a_4","ktu31a11","ktu31a28","ktu31a29","k102")]
dat <- dat%>% rename(
sex=t3,
income2000=bv4_1,
income1991=ktu32,
father_income1972=t10,
father_income1983=t11,
mother_income1972=t12,
mother_income1983=t13,
familySES=t14,
totalITPA_10=l16,
totalITPA_12=l17,
grade_2yr=k70,
grade_3yr=k71,
grade_4yr=k72,
grade_5yr=k73,
grade_6yr=k74,
grade_7yr=k75,
grade_8yr=k76,
grade_9yr=k77,
highest_edu=koulu7_1,
len_of_edu=koulu1,
num_field=koulu4,
edu_field=koulu7_2,
age_start_highedu=koulu7_9,
qual_job=ktu19,
len_unemp=ktu31a_4,
len_gap=ktu31a11,
age_work=ktu31a28,
age1991=ktu31a29,
GPA=k102
) %>% mutate( edu_field = ifelse(edu_field==9, NA, edu_field), edu_field=factor(ifelse(edu_field %in% c(0,1,2),0,1), levels=0:1, labels=c("Art","Science")),
qual_job=factor(qual_job,levels=0:2,labels=c("No","Somewhat","Yes"),ordered = T),
familySES=factor(familySES,levels=1:3,labels=c("High","Medium","low"),ordered = T),
family.income=father_income1972 +father_income1983+ mother_income1972 +mother_income1983,
sex=factor(sex,levels=c(1,2), labels=c("Male","Female")))
library(scales)
library(boot)
library(dplyr)
library(fdtmle)
# subset useful variables
dat <- dat[,c("t3","bv4_1","ktu32","t10","t11","t12","t13","t14","l16","l17","k70","k71","k72","k73","k74","k75","k76","k77","koulu7_1","koulu1","koulu4","koulu7_2","koulu7_9","ktu19","ktu31a_4","ktu31a11","ktu31a28","ktu31a29","k102")]
## Clean data====
dat <- read.csv2("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/TMLE FrontDoor Experiments/Real Data Application/FSD2076/Study/Data/daF2076e.csv")
# subset useful variables
dat <- dat[,c("t3","bv4_1","ktu32","t10","t11","t12","t13","t14","l16","l17","k70","k71","k72","k73","k74","k75","k76","k77","koulu7_1","koulu1","koulu4","koulu7_2","koulu7_9","ktu19","ktu31a_4","ktu31a11","ktu31a28","ktu31a29","k102")]
dat <- dat%>% rename(
sex=t3,
income2000=bv4_1,
income1991=ktu32,
father_income1972=t10,
father_income1983=t11,
mother_income1972=t12,
mother_income1983=t13,
familySES=t14,
totalITPA_10=l16,
totalITPA_12=l17,
grade_2yr=k70,
grade_3yr=k71,
grade_4yr=k72,
grade_5yr=k73,
grade_6yr=k74,
grade_7yr=k75,
grade_8yr=k76,
grade_9yr=k77,
highest_edu=koulu7_1,
len_of_edu=koulu1,
num_field=koulu4,
edu_field=koulu7_2,
age_start_highedu=koulu7_9,
qual_job=ktu19,
len_unemp=ktu31a_4,
len_gap=ktu31a11,
age_work=ktu31a28,
age1991=ktu31a29,
GPA=k102
) %>% mutate( edu_field = ifelse(edu_field==9, NA, edu_field), edu_field=factor(ifelse(edu_field %in% c(0,1,2),0,1), levels=0:1, labels=c("Art","Science")),
qual_job=factor(qual_job,levels=0:2,labels=c("No","Somewhat","Yes"),ordered = T),
familySES=factor(familySES,levels=1:3,labels=c("High","Medium","low"),ordered = T),
family.income=father_income1972 +father_income1983+ mother_income1972 +mother_income1983,
sex=factor(sex,levels=c(1,2), labels=c("Male","Female")))
apply(dat, 2,function(x) sum(is.na(x)))
## 6th Grade ====
# Selected variable for analysis
dt1 <- dat %>% select(-grade_2yr,-grade_3yr,-grade_4yr,-grade_5yr,-grade_7yr,-grade_8yr,-grade_9yr,
-income1991,-father_income1972,-father_income1983,-mother_income1972,-mother_income1983, -totalITPA_12,-GPA,-len_gap,-familySES)
dt1 <- dt1 %>% mutate(A=ifelse(grade_6yr>median(grade_6yr),1,0), highest_edu=ifelse(highest_edu<6,0,1))
summary(dt1$A)
setwd("/Users/apple/Library/CloudStorage/Dropbox/Front-door_Anna/TMLE FrontDoor Experiments/Real Data Application")
## treatment: 6th year grade ====
library(fdtmle)
library(mice)
library(gtsummary)
# Estimation
set.seed(7)
getwd()
# Load data
load("data.Rdata")
# Estimation
set.seed(7)
dt1 <- mice(dt1, m=1)
dt1 <- complete(dt1,1) %>% mutate(A=ifelse(grade_6yr>median(grade_6yr),1,0), highest_edu=factor(ifelse(highest_edu<6,0,1), levels=0:1,label=c("No","Yes")),
len_unemp=factor(ifelse(len_unemp<=2,0,1),levels=0:1,label=c("No","Yes")))
sixth.est3.SL <- TMLE(a=c(1,0),data=dt1,treatment="A", mediators=c("highest_edu","len_of_edu","age_start_highedu","num_field","edu_field","qual_job","len_unemp","age_work"),
outcome="income2000", covariates=c("family.income","totalITPA_10","sex","age1991"), onestep=T, mediator.method="bayes",superlearner = T,
lib = c("SL.glm", "SL.earth", "SL.ranger", "SL.mean","SL.bartMachine","SL.xgboost"))
sixth.est3.SL <- TMLE(a=c(1,0),data=dt1,treatment="A", mediators=c("highest_edu","len_of_edu","age_start_highedu","num_field","edu_field","qual_job","len_unemp","age_work"),
outcome="income2000", covariates=c("family.income","totalITPA_10","sex","age1991"), onestep=T, mediator.method="bayes",superlearner = T, crossfit = T,K=5,
lib = c("SL.glm", "SL.earth", "SL.ranger", "SL.mean","SL.xgboost"))
warnings()
# Check for positivity violation
ps <- predict(glm(A ~ ., data=dt1[,c("A","family.income","totalITPA_10","sex","age1991")], family = binomial()),type="response")
p.A.X <- dt1$A*ps +(1-dt1$A)*(1-ps)
summary(p.A.X)
save
?save()
save(list = c("sixth.est3.SL"), file="estimation.Rdata")
